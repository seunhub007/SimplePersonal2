name: Deployment Workflow
on:
  push:
    branches:
      - master

jobs:
  preparation:
    runs-on: ubuntu-latest
    steps:
      - name: preparation
        run: echo "preparing the table ...."
        
      - name: checks out the repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      # Install EKSCTL
      - name: installing eksctl
        run: |
            # for ARM systems, set ARCH to: `arm64`, `armv6` or `armv7`
            ARCH=amd64
            PLATFORM=$(uname -s)_$ARCH
        
            curl -sLO "https://github.com/eksctl-io/eksctl/releases/latest/download/eksctl_$PLATFORM.tar.gz"
        
            # (Optional) Verify checksum
            curl -sL "https://github.com/eksctl-io/eksctl/releases/latest/download/eksctl_checksums.txt" | grep $PLATFORM | sha256sum --check
        
            tar -xzf eksctl_$PLATFORM.tar.gz -C /tmp && rm eksctl_$PLATFORM.tar.gz
        
            sudo mv /tmp/eksctl /usr/local/bin

      - name: # Create EKS Cluster
        run: |
          eksctl create cluster --name Acluster \
          --nodegroup-name Acluster \
          --node-type t2.large \
          --nodes 5 \
          --nodes-max 5 \
          --nodes-min 3 \
          --managed
          # aws eks --region your-aws-region create-cluster \
          #   --name your-eks-cluster-name \
          #   --kubernetes-version 1.21 \
          #   --role-arn arn:aws:iam::675732258064:role/your-eks-cluster-role \
          #   # Additional parameters as needed
      
      - name: # setup OIDC
        run: |
          cluster_name=Acluster
          oidc_id=$(aws eks describe-cluster --name $cluster_name --query "cluster.identity.oidc.issuer" --output text | cut -d '/' -f 5)
          aws iam list-open-id-connect-providers | grep $oidc_id | cut -d "/" -f4
          eksctl utils associate-iam-oidc-provider --cluster $cluster_name --approve

      - name: # create a service account
        run: |
          echo "Creating service account..."
          eksctl create iamserviceaccount \
          --name ebs-csi-controller-sa \
          --namespace kube-system \
          --cluster $cluster_name \
          --role-name AmazonEKS_EBS_CSI_DriverRole \
          --role-only \
          --attach-policy-arn arn:aws:iam::aws:policy/service-role/AmazonEBSCSIDriverPolicy \
          --approve

      - name: # add the EBS-CSI addon
        run: |
          echo "Adding EBS-CSI addon..."
          eksctl create addon --name aws-ebs-csi-driver --cluster $cluster_name --service-account-role-arn arn:aws:iam::$account_id:role/AmazonEKS_EBS_CSI_DriverRole --force
        

      # - name: Get EKS Cluster Configuration
      #   run: |
      #     aws eks --region your-aws-region update-kubeconfig \
      #       --name your-eks-cluster-name 
        
      - name: "Logs into docker"
        uses: docker/login-action@v3
        with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_PASSWORD }}  
      - name: "Build our code"
        env:
          IMAGE_NAME: spcool
          VERSION: 1
          USERNAME: seun007
        run: |
            docker build -t $USERNAME/$IMAGE_NAME:$VERSION .
            docker push $USERNAME/$IMAGE_NAME:$VERSION


        

            